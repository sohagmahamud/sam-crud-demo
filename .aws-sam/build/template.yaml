AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-python-crud-sample

  SAM Template for sam-python-crud-sample

  '
Globals:
  Function:
    Timeout: 60
  Api:
    BinaryMediaTypes:
    - '*/*'
Parameters:
  Table:
    Type: String
    Default: Users
  Region:
    Type: String
    Default: ap-southeast-1
  AWSEnv:
    Type: String
    Default: AWS
Resources:
  UploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UploadFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          TABLE:
            Ref: Table
          REGION:
            Ref: Region
          AWSENV:
            Ref: AWSEnv
      Events:
        Users:
          Type: Api
          Properties:
            Path: /upload
            Method: post
            BinaryMediaTypes:
            - '*/*'
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UsersTable
  ListUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ListUsersFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          TABLE:
            Ref: Table
          REGION:
            Ref: Region
          AWSENV:
            Ref: AWSEnv
      Events:
        CreateUsers:
          Type: Api
          Properties:
            Path: /users/
            Method: get
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UsersTable
  UpdateUsersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateUsersFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          TABLE:
            Ref: Table
          REGION:
            Ref: Region
          AWSENV:
            Ref: AWSEnv
      Events:
        Users:
          Type: Api
          Properties:
            Path: /users/{username}
            Method: put
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UsersTable
  DeleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DeleteUserFunction
      Handler: app.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          TABLE:
            Ref: Table
          REGION:
            Ref: Region
          AWSENV:
            Ref: AWSEnv
      Events:
        Users:
          Type: Api
          Properties:
            Path: /users/{username}/{date}
            Method: delete
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UsersTable
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: username
        AttributeType: S
      - AttributeName: date
        AttributeType: S
      KeySchema:
      - AttributeName: username
        KeyType: HASH
      - AttributeName: date
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'
      TableName: Users
Outputs:
  UsersApi:
    Description: API Gateway endpoint URL for Prod stage for Upload Function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/upload/
  UploadFunction:
    Description: Upload Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UploadFunction
      - Arn
  UploadFunctionIamRole:
    Description: Implicit IAM Role created for Upload function
    Value:
      Fn::GetAtt:
      - UploadFunctionRole
      - Arn
  ListUsersFunction:
    Description: List Users Lambda Function ARN
    Value:
      Fn::GetAtt:
      - ListUsersFunction
      - Arn
  ListUsersFunctionIamRole:
    Description: Implicit IAM Role created for List Users function
    Value:
      Fn::GetAtt:
      - ListUsersFunctionRole
      - Arn
  UpdateUsersFunction:
    Description: Update Users Lambda Function ARN
    Value:
      Fn::GetAtt:
      - UpdateUsersFunction
      - Arn
  UpdateUsersFunctionIamRole:
    Description: Implicit IAM Role created for Update Users function
    Value:
      Fn::GetAtt:
      - UpdateUsersFunctionRole
      - Arn
  DeleteUserFunction:
    Description: Delete User Lambda Function ARN
    Value:
      Fn::GetAtt:
      - DeleteUserFunction
      - Arn
  DeleteUserFunctionIamRole:
    Description: Implicit IAM Role created for Delete User function
    Value:
      Fn::GetAtt:
      - DeleteUserFunctionRole
      - Arn
  UsersTable:
    Description: DynamoDB Table
    Value:
      Ref: UsersTable
  UsersTableArn:
    Description: DynamoDB Table ARN
    Value:
      Fn::GetAtt:
      - UsersTable
      - Arn
